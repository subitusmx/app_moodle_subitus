'use strict';

var _get = require('babel-runtime/helpers/get')['default'];

var _inherits = require('babel-runtime/helpers/inherits')['default'];

var _createClass = require('babel-runtime/helpers/create-class')['default'];

var _classCallCheck = require('babel-runtime/helpers/class-call-check')['default'];

var _slicedToArray = require('babel-runtime/helpers/sliced-to-array')['default'];

var _regeneratorRuntime = require('babel-runtime/regenerator')['default'];

var _getIterator = require('babel-runtime/core-js/get-iterator')['default'];

var _interopRequireDefault = require('babel-runtime/helpers/interop-require-default')['default'];

Object.defineProperty(exports, '__esModule', {
  value: true
});

var _lodash = require('lodash');

var _lodash2 = _interopRequireDefault(_lodash);

var _appiumBaseDriver = require('appium-base-driver');

var _fakeApp = require('./fake-app');

var _commands = require('./commands');

var _commands2 = _interopRequireDefault(_commands);

var FakeDriver = (function (_BaseDriver) {
  _inherits(FakeDriver, _BaseDriver);

  function FakeDriver() {
    _classCallCheck(this, FakeDriver);

    _get(Object.getPrototypeOf(FakeDriver.prototype), 'constructor', this).call(this);
    this.appModel = null;
    this.curContext = 'NATIVE_APP';
    this.elMap = {};
    this.focusedElId = null;
    this.maxElId = 0;
    this.caps = {};

    this.desiredCapConstraints = {
      app: {
        presence: true,
        isString: true
      }
    };
  }

  _createClass(FakeDriver, [{
    key: 'createSession',
    value: function createSession(caps, reqCaps) {
      var otherSessionData = arguments.length <= 2 || arguments[2] === undefined ? [] : arguments[2];

      var _iteratorNormalCompletion, _didIteratorError, _iteratorError, _iterator, _step, d, _ref, _ref2, sessionId;

      return _regeneratorRuntime.async(function createSession$(context$2$0) {
        while (1) switch (context$2$0.prev = context$2$0.next) {
          case 0:
            _iteratorNormalCompletion = true;
            _didIteratorError = false;
            _iteratorError = undefined;
            context$2$0.prev = 3;
            _iterator = _getIterator(otherSessionData);

          case 5:
            if (_iteratorNormalCompletion = (_step = _iterator.next()).done) {
              context$2$0.next = 12;
              break;
            }

            d = _step.value;

            if (!d.isUnique) {
              context$2$0.next = 9;
              break;
            }

            throw new _appiumBaseDriver.errors.SessionNotCreatedError("Cannot start session; another " + "unique session is in progress that requires all resources");

          case 9:
            _iteratorNormalCompletion = true;
            context$2$0.next = 5;
            break;

          case 12:
            context$2$0.next = 18;
            break;

          case 14:
            context$2$0.prev = 14;
            context$2$0.t0 = context$2$0['catch'](3);
            _didIteratorError = true;
            _iteratorError = context$2$0.t0;

          case 18:
            context$2$0.prev = 18;
            context$2$0.prev = 19;

            if (!_iteratorNormalCompletion && _iterator['return']) {
              _iterator['return']();
            }

          case 21:
            context$2$0.prev = 21;

            if (!_didIteratorError) {
              context$2$0.next = 24;
              break;
            }

            throw _iteratorError;

          case 24:
            return context$2$0.finish(21);

          case 25:
            return context$2$0.finish(18);

          case 26:
            context$2$0.next = 28;
            return _regeneratorRuntime.awrap(_get(Object.getPrototypeOf(FakeDriver.prototype), 'createSession', this).call(this, caps, reqCaps));

          case 28:
            _ref = context$2$0.sent;
            _ref2 = _slicedToArray(_ref, 1);
            sessionId = _ref2[0];

            this.appModel = new _fakeApp.FakeApp();
            if (_lodash2['default'].isArray(caps) === true && caps.length === 1) {
              caps = caps[0];
            }
            this.caps = caps;
            context$2$0.next = 36;
            return _regeneratorRuntime.awrap(this.appModel.loadApp(caps.app));

          case 36:
            return context$2$0.abrupt('return', [sessionId, caps]);

          case 37:
          case 'end':
            return context$2$0.stop();
        }
      }, null, this, [[3, 14, 18, 26], [19,, 21, 25]]);
    }
  }, {
    key: 'driverData',
    get: function get() {
      return {
        isUnique: !!this.caps.uniqueApp
      };
    }
  }]);

  return FakeDriver;
})(_appiumBaseDriver.BaseDriver);

var _iteratorNormalCompletion2 = true;
var _didIteratorError2 = false;
var _iteratorError2 = undefined;

try {

  for (var _iterator2 = _getIterator(_lodash2['default'].pairs(_commands2['default'])), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {
    var _step2$value = _slicedToArray(_step2.value, 2);

    var cmd = _step2$value[0];
    var fn = _step2$value[1];

    FakeDriver.prototype[cmd] = fn;
  }
} catch (err) {
  _didIteratorError2 = true;
  _iteratorError2 = err;
} finally {
  try {
    if (!_iteratorNormalCompletion2 && _iterator2['return']) {
      _iterator2['return']();
    }
  } finally {
    if (_didIteratorError2) {
      throw _iteratorError2;
    }
  }
}

exports.FakeDriver = FakeDriver;

// TODO add validation on caps.app that we will get for free from
// BaseDriver

// check to see if any other sessions have set uniqueApp. If so, emulate
// not being able to start a session because of system resources
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpYi9kcml2ZXIuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztzQkFBYyxRQUFROzs7O2dDQUNhLG9CQUFvQjs7dUJBQy9CLFlBQVk7O3dCQUNmLFlBQVk7Ozs7SUFFM0IsVUFBVTtZQUFWLFVBQVU7O0FBRUYsV0FGUixVQUFVLEdBRUM7MEJBRlgsVUFBVTs7QUFHWiwrQkFIRSxVQUFVLDZDQUdKO0FBQ1IsUUFBSSxDQUFDLFFBQVEsR0FBRyxJQUFJLENBQUM7QUFDckIsUUFBSSxDQUFDLFVBQVUsR0FBRyxZQUFZLENBQUM7QUFDL0IsUUFBSSxDQUFDLEtBQUssR0FBRyxFQUFFLENBQUM7QUFDaEIsUUFBSSxDQUFDLFdBQVcsR0FBRyxJQUFJLENBQUM7QUFDeEIsUUFBSSxDQUFDLE9BQU8sR0FBRyxDQUFDLENBQUM7QUFDakIsUUFBSSxDQUFDLElBQUksR0FBRyxFQUFFLENBQUM7O0FBRWYsUUFBSSxDQUFDLHFCQUFxQixHQUFHO0FBQzNCLFNBQUcsRUFBRTtBQUNILGdCQUFRLEVBQUUsSUFBSTtBQUNkLGdCQUFRLEVBQUUsSUFBSTtPQUNmO0tBQ0YsQ0FBQztHQUNIOztlQWpCRyxVQUFVOztXQW1CTSx1QkFBQyxJQUFJLEVBQUUsT0FBTztVQUFFLGdCQUFnQix5REFBRyxFQUFFOzswRkFNOUMsQ0FBQyxlQU9MLFNBQVM7Ozs7Ozs7OztxQ0FQQSxnQkFBZ0I7Ozs7Ozs7O0FBQXJCLGFBQUM7O2lCQUNKLENBQUMsQ0FBQyxRQUFROzs7OztrQkFDTixJQUFJLHlCQUFPLHNCQUFzQixDQUFDLGdDQUFnQyxHQUNwRSwyREFBMkQsQ0FBQzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozt3RUE1QmxFLFVBQVUsK0NBZ0NnQyxJQUFJLEVBQUUsT0FBTzs7Ozs7QUFBcEQscUJBQVM7O0FBQ2QsZ0JBQUksQ0FBQyxRQUFRLEdBQUcsc0JBQWEsQ0FBQztBQUM5QixnQkFBRyxvQkFBRSxPQUFPLENBQUMsSUFBSSxDQUFDLEtBQUssSUFBSSxJQUFJLElBQUksQ0FBQyxNQUFNLEtBQUssQ0FBQyxFQUFFO0FBQ2hELGtCQUFJLEdBQUcsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFDO2FBQ2hCO0FBQ0QsZ0JBQUksQ0FBQyxJQUFJLEdBQUcsSUFBSSxDQUFDOzs2Q0FDWCxJQUFJLENBQUMsUUFBUSxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDOzs7Z0RBQzlCLENBQUMsU0FBUyxFQUFFLElBQUksQ0FBQzs7Ozs7OztLQUN6Qjs7O1NBRWMsZUFBRztBQUNoQixhQUFPO0FBQ0wsZ0JBQVEsRUFBRSxDQUFDLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxTQUFTO09BQ2hDLENBQUM7S0FDSDs7O1NBOUNHLFVBQVU7Ozs7Ozs7OztBQWlEaEIscUNBQXNCLG9CQUFFLEtBQUssdUJBQVUsaUhBQUU7OztRQUEvQixHQUFHO1FBQUUsRUFBRTs7QUFDZixjQUFVLENBQUMsU0FBUyxDQUFDLEdBQUcsQ0FBQyxHQUFHLEVBQUUsQ0FBQztHQUNoQzs7Ozs7Ozs7Ozs7Ozs7OztRQUVRLFVBQVUsR0FBVixVQUFVIiwiZmlsZSI6ImxpYi9kcml2ZXIuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgXyBmcm9tICdsb2Rhc2gnO1xuaW1wb3J0IHsgQmFzZURyaXZlciwgZXJyb3JzIH0gZnJvbSAnYXBwaXVtLWJhc2UtZHJpdmVyJztcbmltcG9ydCB7IEZha2VBcHAgfSBmcm9tICcuL2Zha2UtYXBwJztcbmltcG9ydCBjb21tYW5kcyBmcm9tICcuL2NvbW1hbmRzJztcblxuY2xhc3MgRmFrZURyaXZlciBleHRlbmRzIEJhc2VEcml2ZXIge1xuXG4gIGNvbnN0cnVjdG9yICgpIHtcbiAgICBzdXBlcigpO1xuICAgIHRoaXMuYXBwTW9kZWwgPSBudWxsO1xuICAgIHRoaXMuY3VyQ29udGV4dCA9ICdOQVRJVkVfQVBQJztcbiAgICB0aGlzLmVsTWFwID0ge307XG4gICAgdGhpcy5mb2N1c2VkRWxJZCA9IG51bGw7XG4gICAgdGhpcy5tYXhFbElkID0gMDtcbiAgICB0aGlzLmNhcHMgPSB7fTtcblxuICAgIHRoaXMuZGVzaXJlZENhcENvbnN0cmFpbnRzID0ge1xuICAgICAgYXBwOiB7XG4gICAgICAgIHByZXNlbmNlOiB0cnVlLFxuICAgICAgICBpc1N0cmluZzogdHJ1ZVxuICAgICAgfVxuICAgIH07XG4gIH1cblxuICBhc3luYyBjcmVhdGVTZXNzaW9uIChjYXBzLCByZXFDYXBzLCBvdGhlclNlc3Npb25EYXRhID0gW10pIHtcbiAgICAvLyBUT0RPIGFkZCB2YWxpZGF0aW9uIG9uIGNhcHMuYXBwIHRoYXQgd2Ugd2lsbCBnZXQgZm9yIGZyZWUgZnJvbVxuICAgIC8vIEJhc2VEcml2ZXJcblxuICAgIC8vIGNoZWNrIHRvIHNlZSBpZiBhbnkgb3RoZXIgc2Vzc2lvbnMgaGF2ZSBzZXQgdW5pcXVlQXBwLiBJZiBzbywgZW11bGF0ZVxuICAgIC8vIG5vdCBiZWluZyBhYmxlIHRvIHN0YXJ0IGEgc2Vzc2lvbiBiZWNhdXNlIG9mIHN5c3RlbSByZXNvdXJjZXNcbiAgICBmb3IgKGxldCBkIG9mIG90aGVyU2Vzc2lvbkRhdGEpIHtcbiAgICAgIGlmIChkLmlzVW5pcXVlKSB7XG4gICAgICAgIHRocm93IG5ldyBlcnJvcnMuU2Vzc2lvbk5vdENyZWF0ZWRFcnJvcihcIkNhbm5vdCBzdGFydCBzZXNzaW9uOyBhbm90aGVyIFwiICtcbiAgICAgICAgICAgIFwidW5pcXVlIHNlc3Npb24gaXMgaW4gcHJvZ3Jlc3MgdGhhdCByZXF1aXJlcyBhbGwgcmVzb3VyY2VzXCIpO1xuICAgICAgfVxuICAgIH1cblxuICAgIGxldCBbc2Vzc2lvbklkXSA9IGF3YWl0IHN1cGVyLmNyZWF0ZVNlc3Npb24oY2FwcywgcmVxQ2Fwcyk7XG4gICAgdGhpcy5hcHBNb2RlbCA9IG5ldyBGYWtlQXBwKCk7XG4gICAgaWYoXy5pc0FycmF5KGNhcHMpID09PSB0cnVlICYmIGNhcHMubGVuZ3RoID09PSAxKSB7XG4gICAgICBjYXBzID0gY2Fwc1swXTtcbiAgICB9XG4gICAgdGhpcy5jYXBzID0gY2FwcztcbiAgICBhd2FpdCB0aGlzLmFwcE1vZGVsLmxvYWRBcHAoY2Fwcy5hcHApO1xuICAgIHJldHVybiBbc2Vzc2lvbklkLCBjYXBzXTtcbiAgfVxuXG4gIGdldCBkcml2ZXJEYXRhICgpIHtcbiAgICByZXR1cm4ge1xuICAgICAgaXNVbmlxdWU6ICEhdGhpcy5jYXBzLnVuaXF1ZUFwcFxuICAgIH07XG4gIH1cbn1cblxuZm9yIChsZXQgW2NtZCwgZm5dIG9mIF8ucGFpcnMoY29tbWFuZHMpKSB7XG4gIEZha2VEcml2ZXIucHJvdG90eXBlW2NtZF0gPSBmbjtcbn1cblxuZXhwb3J0IHsgRmFrZURyaXZlciB9O1xuIl0sInNvdXJjZVJvb3QiOiIuLi8uLiJ9
