require('source-map-support').install();

'use strict';

var _regeneratorRuntime = require('babel-runtime/regenerator')['default'];

var _interopRequireDefault = require('babel-runtime/helpers/interop-require-default')['default'];

var _this = this;

var _libMjsonwpValidators = require('../../lib/mjsonwp/validators');

var _chai = require('chai');

var _chai2 = _interopRequireDefault(_chai);

_chai2['default'].should();

describe('MJSONWP', function () {
  describe('direct to driver', function () {

    describe('setUrl', function () {
      it('should fail when no url passed', function callee$3$0() {
        return _regeneratorRuntime.async(function callee$3$0$(context$4$0) {
          while (1) switch (context$4$0.prev = context$4$0.next) {
            case 0:
              (function () {
                _libMjsonwpValidators.validators.setUrl();
              }).should['throw'](/url/i);

            case 1:
            case 'end':
              return context$4$0.stop();
          }
        }, null, _this);
      });
      it('should fail when given invalid url', function callee$3$0() {
        return _regeneratorRuntime.async(function callee$3$0$(context$4$0) {
          while (1) switch (context$4$0.prev = context$4$0.next) {
            case 0:
              (function () {
                _libMjsonwpValidators.validators.setUrl('foo');
              }).should['throw'](/url/i);

            case 1:
            case 'end':
              return context$4$0.stop();
          }
        }, null, _this);
      });
      it('should succeed when given url starting with http', function callee$3$0() {
        return _regeneratorRuntime.async(function callee$3$0$(context$4$0) {
          while (1) switch (context$4$0.prev = context$4$0.next) {
            case 0:
              (function () {
                _libMjsonwpValidators.validators.setUrl('http://appium.io');
              }).should.not['throw']();

            case 1:
            case 'end':
              return context$4$0.stop();
          }
        }, null, _this);
      });
      it('should succeed when given an android-like scheme', function callee$3$0() {
        return _regeneratorRuntime.async(function callee$3$0$(context$4$0) {
          while (1) switch (context$4$0.prev = context$4$0.next) {
            case 0:
              (function () {
                _libMjsonwpValidators.validators.setUrl('content://contacts/people/1');
              }).should.not['throw']();

            case 1:
            case 'end':
              return context$4$0.stop();
          }
        }, null, _this);
      });
      it('should succeed with hyphens dots and plus chars in the scheme', function callee$3$0() {
        return _regeneratorRuntime.async(function callee$3$0$(context$4$0) {
          while (1) switch (context$4$0.prev = context$4$0.next) {
            case 0:
              (function () {
                _libMjsonwpValidators.validators.setUrl('my-app.a+b://login');
              }).should.not['throw']();

            case 1:
            case 'end':
              return context$4$0.stop();
          }
        }, null, _this);
      });
      it('should succeed when given an about scheme', function callee$3$0() {
        return _regeneratorRuntime.async(function callee$3$0$(context$4$0) {
          while (1) switch (context$4$0.prev = context$4$0.next) {
            case 0:
              (function () {
                _libMjsonwpValidators.validators.setUrl('about:blank');
              }).should.not['throw']();

            case 1:
            case 'end':
              return context$4$0.stop();
          }
        }, null, _this);
      });
      it('should succeed when given a data scheme', function callee$3$0() {
        return _regeneratorRuntime.async(function callee$3$0$(context$4$0) {
          while (1) switch (context$4$0.prev = context$4$0.next) {
            case 0:
              (function () {
                _libMjsonwpValidators.validators.setUrl('data:text/html,<html></html>');
              }).should.not['throw']();

            case 1:
            case 'end':
              return context$4$0.stop();
          }
        }, null, _this);
      });
    });
    describe('implicitWait', function () {
      it('should fail when given no ms', function callee$3$0() {
        return _regeneratorRuntime.async(function callee$3$0$(context$4$0) {
          while (1) switch (context$4$0.prev = context$4$0.next) {
            case 0:
              (function () {
                _libMjsonwpValidators.validators.implicitWait();
              }).should['throw'](/ms/i);

            case 1:
            case 'end':
              return context$4$0.stop();
          }
        }, null, _this);
      });
      it('should fail when given a non-numeric ms', function callee$3$0() {
        return _regeneratorRuntime.async(function callee$3$0$(context$4$0) {
          while (1) switch (context$4$0.prev = context$4$0.next) {
            case 0:
              (function () {
                _libMjsonwpValidators.validators.implicitWait("five");
              }).should['throw'](/ms/i);

            case 1:
            case 'end':
              return context$4$0.stop();
          }
        }, null, _this);
      });
      it('should fail when given a negative ms', function callee$3$0() {
        return _regeneratorRuntime.async(function callee$3$0$(context$4$0) {
          while (1) switch (context$4$0.prev = context$4$0.next) {
            case 0:
              (function () {
                _libMjsonwpValidators.validators.implicitWait(-1);
              }).should['throw'](/ms/i);

            case 1:
            case 'end':
              return context$4$0.stop();
          }
        }, null, _this);
      });
      it('should succeed when given an ms of 0', function callee$3$0() {
        return _regeneratorRuntime.async(function callee$3$0$(context$4$0) {
          while (1) switch (context$4$0.prev = context$4$0.next) {
            case 0:
              (function () {
                _libMjsonwpValidators.validators.implicitWait(0);
              }).should.not['throw']();

            case 1:
            case 'end':
              return context$4$0.stop();
          }
        }, null, _this);
      });
      it('should succeed when given an ms greater than 0', function callee$3$0() {
        return _regeneratorRuntime.async(function callee$3$0$(context$4$0) {
          while (1) switch (context$4$0.prev = context$4$0.next) {
            case 0:
              (function () {
                _libMjsonwpValidators.validators.implicitWait(100);
              }).should.not['throw']();

            case 1:
            case 'end':
              return context$4$0.stop();
          }
        }, null, _this);
      });
    });
    describe('asyncScriptTimeout', function () {
      it('should fail when given no ms', function callee$3$0() {
        return _regeneratorRuntime.async(function callee$3$0$(context$4$0) {
          while (1) switch (context$4$0.prev = context$4$0.next) {
            case 0:
              (function () {
                _libMjsonwpValidators.validators.asyncScriptTimeout();
              }).should['throw'](/ms/i);

            case 1:
            case 'end':
              return context$4$0.stop();
          }
        }, null, _this);
      });
      it('should fail when given a non-numeric ms', function callee$3$0() {
        return _regeneratorRuntime.async(function callee$3$0$(context$4$0) {
          while (1) switch (context$4$0.prev = context$4$0.next) {
            case 0:
              (function () {
                _libMjsonwpValidators.validators.asyncScriptTimeout("five");
              }).should['throw'](/ms/i);

            case 1:
            case 'end':
              return context$4$0.stop();
          }
        }, null, _this);
      });
      it('should fail when given a negative ms', function callee$3$0() {
        return _regeneratorRuntime.async(function callee$3$0$(context$4$0) {
          while (1) switch (context$4$0.prev = context$4$0.next) {
            case 0:
              (function () {
                _libMjsonwpValidators.validators.asyncScriptTimeout(-1);
              }).should['throw'](/ms/i);

            case 1:
            case 'end':
              return context$4$0.stop();
          }
        }, null, _this);
      });
      it('should succeed when given an ms of 0', function callee$3$0() {
        return _regeneratorRuntime.async(function callee$3$0$(context$4$0) {
          while (1) switch (context$4$0.prev = context$4$0.next) {
            case 0:
              (function () {
                _libMjsonwpValidators.validators.asyncScriptTimeout(0);
              }).should.not['throw']();

            case 1:
            case 'end':
              return context$4$0.stop();
          }
        }, null, _this);
      });
      it('should succeed when given an ms greater than 0', function callee$3$0() {
        return _regeneratorRuntime.async(function callee$3$0$(context$4$0) {
          while (1) switch (context$4$0.prev = context$4$0.next) {
            case 0:
              (function () {
                _libMjsonwpValidators.validators.asyncScriptTimeout(100);
              }).should.not['throw']();

            case 1:
            case 'end':
              return context$4$0.stop();
          }
        }, null, _this);
      });
    });
    describe('other timeouts', function () {
      it('should fail when given no ms', function callee$3$0() {
        return _regeneratorRuntime.async(function callee$3$0$(context$4$0) {
          while (1) switch (context$4$0.prev = context$4$0.next) {
            case 0:
              (function () {
                _libMjsonwpValidators.validators.timeouts('page load');
              }).should['throw'](/ms/i);

            case 1:
            case 'end':
              return context$4$0.stop();
          }
        }, null, _this);
      });
      it('should fail when given a non-numeric ms', function callee$3$0() {
        return _regeneratorRuntime.async(function callee$3$0$(context$4$0) {
          while (1) switch (context$4$0.prev = context$4$0.next) {
            case 0:
              (function () {
                _libMjsonwpValidators.validators.timeouts('page load', "five");
              }).should['throw'](/ms/i);

            case 1:
            case 'end':
              return context$4$0.stop();
          }
        }, null, _this);
      });
      it('should fail when given a negative ms', function callee$3$0() {
        return _regeneratorRuntime.async(function callee$3$0$(context$4$0) {
          while (1) switch (context$4$0.prev = context$4$0.next) {
            case 0:
              (function () {
                _libMjsonwpValidators.validators.timeouts('page load', -1);
              }).should['throw'](/ms/i);

            case 1:
            case 'end':
              return context$4$0.stop();
          }
        }, null, _this);
      });
      it('should succeed when given an ms of 0', function callee$3$0() {
        return _regeneratorRuntime.async(function callee$3$0$(context$4$0) {
          while (1) switch (context$4$0.prev = context$4$0.next) {
            case 0:
              (function () {
                _libMjsonwpValidators.validators.timeouts('page load', 0);
              }).should.not['throw']();

            case 1:
            case 'end':
              return context$4$0.stop();
          }
        }, null, _this);
      });
      it('should succeed when given an ms greater than 0', function callee$3$0() {
        return _regeneratorRuntime.async(function callee$3$0$(context$4$0) {
          while (1) switch (context$4$0.prev = context$4$0.next) {
            case 0:
              (function () {
                _libMjsonwpValidators.validators.timeouts('page load', 100);
              }).should.not['throw']();

            case 1:
            case 'end':
              return context$4$0.stop();
          }
        }, null, _this);
      });
      it('should not allow an invalid timeout type', function callee$3$0() {
        return _regeneratorRuntime.async(function callee$3$0$(context$4$0) {
          while (1) switch (context$4$0.prev = context$4$0.next) {
            case 0:
              (function () {
                _libMjsonwpValidators.validators.timeouts('foofoo', 100);
              }).should['throw'](/'foofoo'/);

            case 1:
            case 'end':
              return context$4$0.stop();
          }
        }, null, _this);
      });
    });
    describe('clickCurrent', function () {
      it('should fail when given an invalid button', function callee$3$0() {
        return _regeneratorRuntime.async(function callee$3$0$(context$4$0) {
          while (1) switch (context$4$0.prev = context$4$0.next) {
            case 0:
              (function () {
                _libMjsonwpValidators.validators.clickCurrent(4);
              }).should['throw'](/0, 1, or 2/i);

            case 1:
            case 'end':
              return context$4$0.stop();
          }
        }, null, _this);
      });
      it('should succeed when given a valid button', function callee$3$0() {
        return _regeneratorRuntime.async(function callee$3$0$(context$4$0) {
          while (1) switch (context$4$0.prev = context$4$0.next) {
            case 0:
              (function () {
                _libMjsonwpValidators.validators.clickCurrent(0);
              }).should.not['throw']();
              (function () {
                _libMjsonwpValidators.validators.clickCurrent(1);
              }).should.not['throw']();
              (function () {
                _libMjsonwpValidators.validators.clickCurrent(2);
              }).should.not['throw']();

            case 3:
            case 'end':
              return context$4$0.stop();
          }
        }, null, _this);
      });
    });
    describe('setNetworkConnection', function () {
      it('should fail when given no type', function callee$3$0() {
        return _regeneratorRuntime.async(function callee$3$0$(context$4$0) {
          while (1) switch (context$4$0.prev = context$4$0.next) {
            case 0:
              (function () {
                _libMjsonwpValidators.validators.setNetworkConnection();
              }).should['throw'](/0, 1, 2, 4, 6/i);

            case 1:
            case 'end':
              return context$4$0.stop();
          }
        }, null, _this);
      });
      it('should fail when given an invalid type', function callee$3$0() {
        return _regeneratorRuntime.async(function callee$3$0$(context$4$0) {
          while (1) switch (context$4$0.prev = context$4$0.next) {
            case 0:
              (function () {
                _libMjsonwpValidators.validators.setNetworkConnection(8);
              }).should['throw'](/0, 1, 2, 4, 6/i);

            case 1:
            case 'end':
              return context$4$0.stop();
          }
        }, null, _this);
      });
      it('should succeed when given a valid type', function callee$3$0() {
        return _regeneratorRuntime.async(function callee$3$0$(context$4$0) {
          while (1) switch (context$4$0.prev = context$4$0.next) {
            case 0:
              (function () {
                _libMjsonwpValidators.validators.setNetworkConnection(0);
              }).should.not['throw']();
              (function () {
                _libMjsonwpValidators.validators.setNetworkConnection(1);
              }).should.not['throw']();
              (function () {
                _libMjsonwpValidators.validators.setNetworkConnection(2);
              }).should.not['throw']();
              (function () {
                _libMjsonwpValidators.validators.setNetworkConnection(4);
              }).should.not['throw']();
              (function () {
                _libMjsonwpValidators.validators.setNetworkConnection(6);
              }).should.not['throw']();

            case 5:
            case 'end':
              return context$4$0.stop();
          }
        }, null, _this);
      });
    });
  });
});
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInRlc3QvbWpzb253cC92YWxpZGF0b3Itc3BlY3MuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7OztvQ0FFMkIsOEJBQThCOztvQkFDeEMsTUFBTTs7OztBQUd2QixrQkFBSyxNQUFNLEVBQUUsQ0FBQzs7QUFFZCxRQUFRLENBQUMsU0FBUyxFQUFFLFlBQU07QUFDeEIsVUFBUSxDQUFDLGtCQUFrQixFQUFFLFlBQU07O0FBRWpDLFlBQVEsQ0FBQyxRQUFRLEVBQUUsWUFBTTtBQUN2QixRQUFFLENBQUMsZ0NBQWdDLEVBQUU7Ozs7QUFDbkMsZUFBQyxZQUFNO0FBQUMsaURBQVcsTUFBTSxFQUFFLENBQUM7ZUFBQyxDQUFBLENBQUUsTUFBTSxTQUFNLENBQUMsTUFBTSxDQUFDLENBQUM7Ozs7Ozs7T0FDckQsQ0FBQyxDQUFDO0FBQ0gsUUFBRSxDQUFDLG9DQUFvQyxFQUFFOzs7O0FBQ3ZDLGVBQUMsWUFBTTtBQUFDLGlEQUFXLE1BQU0sQ0FBQyxLQUFLLENBQUMsQ0FBQztlQUFDLENBQUEsQ0FBRSxNQUFNLFNBQU0sQ0FBQyxNQUFNLENBQUMsQ0FBQzs7Ozs7OztPQUMxRCxDQUFDLENBQUM7QUFDSCxRQUFFLENBQUMsa0RBQWtELEVBQUU7Ozs7QUFDckQsZUFBQyxZQUFNO0FBQUMsaURBQVcsTUFBTSxDQUFDLGtCQUFrQixDQUFDLENBQUM7ZUFBQyxDQUFBLENBQUUsTUFBTSxDQUFDLEdBQUcsU0FBTSxFQUFFLENBQUM7Ozs7Ozs7T0FDckUsQ0FBQyxDQUFDO0FBQ0gsUUFBRSxDQUFDLGtEQUFrRCxFQUFFOzs7O0FBQ3JELGVBQUMsWUFBTTtBQUFDLGlEQUFXLE1BQU0sQ0FBQyw2QkFBNkIsQ0FBQyxDQUFDO2VBQUMsQ0FBQSxDQUFFLE1BQU0sQ0FBQyxHQUFHLFNBQU0sRUFBRSxDQUFDOzs7Ozs7O09BQ2hGLENBQUMsQ0FBQztBQUNILFFBQUUsQ0FBQywrREFBK0QsRUFBRTs7OztBQUNsRSxlQUFDLFlBQU07QUFBQyxpREFBVyxNQUFNLENB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OlsiLy8gdHJhbnNwaWxlOm1vY2hhXG5cbmltcG9ydCB7IHZhbGlkYXRvcnMgfSBmcm9tICcuLi8uLi9saWIvbWpzb253cC92YWxpZGF0b3JzJztcbmltcG9ydCBjaGFpIGZyb20gJ2NoYWknO1xuXG5cbmNoYWkuc2hvdWxkKCk7XG5cbmRlc2NyaWJlKCdNSlNPTldQJywgKCkgPT4ge1xuICBkZXNjcmliZSgnZGlyZWN0IHRvIGRyaXZlcicsICgpID0+IHtcblxuICAgIGRlc2NyaWJlKCdzZXRVcmwnLCAoKSA9PiB7XG4gICAgICBpdCgnc2hvdWxkIGZhaWwgd2hlbiBubyB1cmwgcGFzc2VkJywgYXN5bmMgKCkgPT4ge1xuICAgICAgICAoKCkgPT4ge3ZhbGlkYXRvcnMuc2V0VXJsKCk7fSkuc2hvdWxkLnRocm93KC91cmwvaSk7XG4gICAgICB9KTtcbiAgICAgIGl0KCdzaG91bGQgZmFpbCB3aGVuIGdpdmVuIGludmFsaWQgdXJsJywgYXN5bmMgKCkgPT4ge1xuICAgICAgICAoKCkgPT4ge3ZhbGlkYXRvcnMuc2V0VXJsKCdmb28nKTt9KS5zaG91bGQudGhyb3coL3VybC9pKTtcbiAgICAgIH0pO1xuICAgICAgaXQoJ3Nob3VsZCBzdWNjZWVkIHdoZW4gZ2l2ZW4gdXJsIHN0YXJ0aW5nIHdpdGggaHR0cCcsIGFzeW5jICgpID0+IHtcbiAgICAgICAgKCgpID0+IHt2YWxpZGF0b3JzLnNldFVybCgnaHR0cDovL2FwcGl1bS5pbycpO30pLnNob3VsZC5ub3QudGhyb3coKTtcbiAgICAgIH0pO1xuICAgICAgaXQoJ3Nob3VsZCBzdWNjZWVkIHdoZW4gZ2l2ZW4gYW4gYW5kcm9pZC1saWtlIHNjaGVtZScsIGFzeW5jICgpID0+IHtcbiAgICAgICAgKCgpID0+IHt2YWxpZGF0b3JzLnNldFVybCgnY29udGVudDovL2NvbnRhY3RzL3Blb3BsZS8xJyk7fSkuc2hvdWxkLm5vdC50aHJvdygpO1xuICAgICAgfSk7XG4gICAgICBpdCgnc2hvdWxkIHN1Y2NlZWQgd2l0aCBoeXBoZW5zIGRvdHMgYW5kIHBsdXMgY2hhcnMgaW4gdGhlIHNjaGVtZScsIGFzeW5jICgpID0+IHtcbiAgICAgICAgKCgpID0+IHt2YWxpZGF0b3JzLnNldFVybCgnbXktYXBwLmErYjovL2xvZ2luJyk7fSkuc2hvdWxkLm5vdC50aHJvdygpO1xuICAgICAgfSk7XG4gICAgICBpdCgnc2hvdWxkIHN1Y2NlZWQgd2hlbiBnaXZlbiBhbiBhYm91dCBzY2hlbWUnLCBhc3luYyAoKSA9PiB7XG4gICAgICAgICgoKSA9PiB7dmFsaWRhdG9ycy5zZXRVcmwoJ2Fib3V0OmJsYW5rJyk7fSkuc2hvdWxkLm5vdC50aHJvdygpO1xuICAgICAgfSk7XG4gICAgICBpdCgnc2hvdWxkIHN1Y2NlZWQgd2hlbiBnaXZlbiBhIGRhdGEgc2NoZW1lJywgYXN5bmMgKCkgPT4ge1xuICAgICAgICAoKCkgPT4ge3ZhbGlkYXRvcnMuc2V0VXJsKCdkYXRhOnRleHQvaHRtbCw8aHRtbD48L2h0bWw+Jyk7fSkuc2hvdWxkLm5vdC50aHJvdygpO1xuICAgICAgfSk7XG4gICAgfSk7XG4gICAgZGVzY3JpYmUoJ2ltcGxpY2l0V2FpdCcsICgpID0+IHtcbiAgICAgIGl0KCdzaG91bGQgZmFpbCB3aGVuIGdpdmVuIG5vIG1zJywgYXN5bmMgKCkgPT4ge1xuICAgICAgICAoKCkgPT4ge3ZhbGlkYXRvcnMuaW1wbGljaXRXYWl0KCk7fSkuc2hvdWxkLnRocm93KC9tcy9pKTtcbiAgICAgIH0pO1xuICAgICAgaXQoJ3Nob3VsZCBmYWlsIHdoZW4gZ2l2ZW4gYSBub24tbnVtZXJpYyBtcycsIGFzeW5jICgpID0+IHtcbiAgICAgICAgKCgpID0+IHt2YWxpZGF0b3JzLmltcGxpY2l0V2FpdChcImZpdmVcIik7fSkuc2hvdWxkLnRocm93KC9tcy9pKTtcbiAgICAgIH0pO1xuICAgICAgaXQoJ3Nob3VsZCBmYWlsIHdoZW4gZ2l2ZW4gYSBuZWdhdGl2ZSBtcycsIGFzeW5jICgpID0+IHtcbiAgICAgICAgKCgpID0+IHt2YWxpZGF0b3JzLmltcGxpY2l0V2FpdCgtMSk7fSkuc2hvdWxkLnRocm93KC9tcy9pKTtcbiAgICAgIH0pO1xuICAgICAgaXQoJ3Nob3VsZCBzdWNjZWVkIHdoZW4gZ2l2ZW4gYW4gbXMgb2YgMCcsIGFzeW5jICgpID0+IHtcbiAgICAgICAgKCgpID0+IHt2YWxpZGF0b3JzLmltcGxpY2l0V2FpdCgwKTt9KS5zaG91bGQubm90LnRocm93KCk7XG4gICAgICB9KTtcbiAgICAgIGl0KCdzaG91bGQgc3VjY2VlZCB3aGVuIGdpdmVuIGFuIG1zIGdyZWF0ZXIgdGhhbiAwJywgYXN5bmMgKCkgPT4ge1xuICAgICAgICAoKCkgPT4ge3ZhbGlkYXRvcnMuaW1wbGljaXRXYWl0KDEwMCk7fSkuc2hvdWxkLm5vdC50aHJvdygpO1xuICAgICAgfSk7XG4gICAgfSk7XG4gICAgZGVzY3JpYmUoJ2FzeW5jU2NyaXB0VGltZW91dCcsICgpID0+IHtcbiAgICAgIGl0KCdzaG91bGQgZmFpbCB3aGVuIGdpdmVuIG5vIG1zJywgYXN5bmMgKCkgPT4ge1xuICAgICAgICAoKCkgPT4ge3ZhbGlkYXRvcnMuYXN5bmNTY3JpcHRUaW1lb3V0KCk7fSkuc2hvdWxkLnRocm93KC9tcy9pKTtcbiAgICAgIH0pO1xuICAgICAgaXQoJ3Nob3VsZCBmYWlsIHdoZW4gZ2l2ZW4gYSBub24tbnVtZXJpYyBtcycsIGFzeW5jICgpID0+IHtcbiAgICAgICAgKCgpID0+IHt2YWxpZGF0b3JzLmFzeW5jU2NyaXB0VGltZW91dChcImZpdmVcIik7fSkuc2hvdWxkLnRocm93KC9tcy9pKTtcbiAgICAgIH0pO1xuICAgICAgaXQoJ3Nob3VsZCBmYWlsIHdoZW4gZ2l2ZW4gYSBuZWdhdGl2ZSBtcycsIGFzeW5jICgpID0+IHtcbiAgICAgICAgKCgpID0+IHt2YWxpZGF0b3JzLmFzeW5jU2NyaXB0VGltZW91dCgtMSk7fSkuc2hvdWxkLnRocm93KC9tcy9pKTtcbiAgICAgIH0pO1xuICAgICAgaXQoJ3Nob3VsZCBzdWNjZWVkIHdoZW4gZ2l2ZW4gYW4gbXMgb2YgMCcsIGFzeW5jICgpID0+IHtcbiAgICAgICAgKCgpID0+IHt2YWxpZGF0b3JzLmFzeW5jU2NyaXB0VGltZW91dCgwKTt9KS5zaG91bGQubm90LnRocm93KCk7XG4gICAgICB9KTtcbiAgICAgIGl0KCdzaG91bGQgc3VjY2VlZCB3aGVuIGdpdmVuIGFuIG1zIGdyZWF0ZXIgdGhhbiAwJywgYXN5bmMgKCkgPT4ge1xuICAgICAgICAoKCkgPT4ge3ZhbGlkYXRvcnMuYXN5bmNTY3JpcHRUaW1lb3V0KDEwMCk7fSkuc2hvdWxkLm5vdC50aHJvdygpO1xuICAgICAgfSk7XG4gICAgfSk7XG4gICAgZGVzY3JpYmUoJ290aGVyIHRpbWVvdXRzJywgKCkgPT4ge1xuICAgICAgaXQoJ3Nob3VsZCBmYWlsIHdoZW4gZ2l2ZW4gbm8gbXMnLCBhc3luYyAoKSA9PiB7XG4gICAgICAgICgoKSA9PiB7dmFsaWRhdG9ycy50aW1lb3V0cygncGFnZSBsb2FkJyk7fSkuc2hvdWxkLnRocm93KC9tcy9pKTtcbiAgICAgIH0pO1xuICAgICAgaXQoJ3Nob3VsZCBmYWlsIHdoZW4gZ2l2ZW4gYSBub24tbnVtZXJpYyBtcycsIGFzeW5jICgpID0+IHtcbiAgICAgICAgKCgpID0+IHt2YWxpZGF0b3JzLnRpbWVvdXRzKCdwYWdlIGxvYWQnLCBcImZpdmVcIik7fSkuc2hvdWxkLnRocm93KC9tcy9pKTtcbiAgICAgIH0pO1xuICAgICAgaXQoJ3Nob3VsZCBmYWlsIHdoZW4gZ2l2ZW4gYSBuZWdhdGl2ZSBtcycsIGFzeW5jICgpID0+IHtcbiAgICAgICAgKCgpID0+IHt2YWxpZGF0b3JzLnRpbWVvdXRzKCdwYWdlIGxvYWQnLCAtMSk7fSkuc2hvdWxkLnRocm93KC9tcy9pKTtcbiAgICAgIH0pO1xuICAgICAgaXQoJ3Nob3VsZCBzdWNjZWVkIHdoZW4gZ2l2ZW4gYW4gbXMgb2YgMCcsIGFzeW5jICgpID0+IHtcbiAgICAgICAgKCgpID0+IHt2YWxpZGF0b3JzLnRpbWVvdXRzKCdwYWdlIGxvYWQnLCAwKTt9KS5zaG91bGQubm90LnRocm93KCk7XG4gICAgICB9KTtcbiAgICAgIGl0KCdzaG91bGQgc3VjY2VlZCB3aGVuIGdpdmVuIGFuIG1zIGdyZWF0ZXIgdGhhbiAwJywgYXN5bmMgKCkgPT4ge1xuICAgICAgICAoKCkgPT4ge3ZhbGlkYXRvcnMudGltZW91dHMoJ3BhZ2UgbG9hZCcsIDEwMCk7fSkuc2hvdWxkLm5vdC50aHJvdygpO1xuICAgICAgfSk7XG4gICAgICBpdCgnc2hvdWxkIG5vdCBhbGxvdyBhbiBpbnZhbGlkIHRpbWVvdXQgdHlwZScsIGFzeW5jICgpID0+IHtcbiAgICAgICAgKCgpID0+IHt2YWxpZGF0b3JzLnRpbWVvdXRzKCdmb29mb28nLCAxMDApO30pLnNob3VsZC50aHJvdygvJ2Zvb2ZvbycvKTtcbiAgICAgIH0pO1xuICAgIH0pO1xuICAgIGRlc2NyaWJlKCdjbGlja0N1cnJlbnQnLCAoKSA9PiB7XG4gICAgICBpdCgnc2hvdWxkIGZhaWwgd2hlbiBnaXZlbiBhbiBpbnZhbGlkIGJ1dHRvbicsIGFzeW5jICgpID0+IHtcbiAgICAgICAgKCgpID0+IHt2YWxpZGF0b3JzLmNsaWNrQ3VycmVudCg0KTt9KS5zaG91bGQudGhyb3coLzAsIDEsIG9yIDIvaSk7XG4gICAgICB9KTtcbiAgICAgIGl0KCdzaG91bGQgc3VjY2VlZCB3aGVuIGdpdmVuIGEgdmFsaWQgYnV0dG9uJywgYXN5bmMgKCkgPT4ge1xuICAgICAgICAoKCkgPT4ge3ZhbGlkYXRvcnMuY2xpY2tDdXJyZW50KDApO30pLnNob3VsZC5ub3QudGhyb3coKTtcbiAgICAgICAgKCgpID0+IHt2YWxpZGF0b3JzLmNsaWNrQ3VycmVudCgxKTt9KS5zaG91bGQubm90LnRocm93KCk7XG4gICAgICAgICgoKSA9PiB7dmFsaWRhdG9ycy5jbGlja0N1cnJlbnQoMik7fSkuc2hvdWxkLm5vdC50aHJvdygpO1xuICAgICAgfSk7XG4gICAgfSk7XG4gICAgZGVzY3JpYmUoJ3NldE5ldHdvcmtDb25uZWN0aW9uJywgKCkgPT4ge1xuICAgICAgaXQoJ3Nob3VsZCBmYWlsIHdoZW4gZ2l2ZW4gbm8gdHlwZScsIGFzeW5jICgpID0+IHtcbiAgICAgICAgKCgpID0+IHt2YWxpZGF0b3JzLnNldE5ldHdvcmtDb25uZWN0aW9uKCk7fSkuc2hvdWxkLnRocm93KC8wLCAxLCAyLCA0LCA2L2kpO1xuICAgICAgfSk7XG4gICAgICBpdCgnc2hvdWxkIGZhaWwgd2hlbiBnaXZlbiBhbiBpbnZhbGlkIHR5cGUnLCBhc3luYyAoKSA9PiB7XG4gICAgICAgICgoKSA9PiB7dmFsaWRhdG9ycy5zZXROZXR3b3JrQ29ubmVjdGlvbig4KTt9KS5zaG91bGQudGhyb3coLzAsIDEsIDIsIDQsIDYvaSk7XG4gICAgICB9KTtcbiAgICAgIGl0KCdzaG91bGQgc3VjY2VlZCB3aGVuIGdpdmVuIGEgdmFsaWQgdHlwZScsIGFzeW5jICgpID0+IHtcbiAgICAgICAgKCgpID0+IHt2YWxpZGF0b3JzLnNldE5ldHdvcmtDb25uZWN0aW9uKDApO30pLnNob3VsZC5ub3QudGhyb3coKTtcbiAgICAgICAgKCgpID0+IHt2YWxpZGF0b3JzLnNldE5ldHdvcmtDb25uZWN0aW9uKDEpO30pLnNob3VsZC5ub3QudGhyb3coKTtcbiAgICAgICAgKCgpID0+IHt2YWxpZGF0b3JzLnNldE5ldHdvcmtDb25uZWN0aW9uKDIpO30pLnNob3VsZC5ub3QudGhyb3coKTtcbiAgICAgICAgKCgpID0+IHt2YWxpZGF0b3JzLnNldE5ldHdvcmtDb25uZWN0aW9uKDQpO30pLnNob3VsZC5ub3QudGhyb3coKTtcbiAgICAgICAgKCgpID0+IHt2YWxpZGF0b3JzLnNldE5ldHdvcmtDb25uZWN0aW9uKDYpO30pLnNob3VsZC5ub3QudGhyb3coKTtcbiAgICAgIH0pO1xuICAgIH0pO1xuICB9KTtcbn0pO1xuIl0sInNvdXJjZVJvb3QiOiIuLi8uLi8uLiJ9
