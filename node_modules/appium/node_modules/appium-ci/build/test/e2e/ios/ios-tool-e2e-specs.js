require('source-map-support').install();

'use strict';

var _regeneratorRuntime = require('babel-runtime/regenerator')['default'];

var _interopRequireDefault = require('babel-runtime/helpers/interop-require-default')['default'];

var _this = this;

var _ = require('../../..');

var _chai = require('chai');

var _chai2 = _interopRequireDefault(_chai);

var _chaiAsPromised = require('chai-as-promised');

var _chaiAsPromised2 = _interopRequireDefault(_chaiAsPromised);

require('mochawait');

_chai2['default'].should();
_chai2['default'].use(_chaiAsPromised2['default']);

describe('ios tools e2e', function () {

  it('spawn as user', function callee$1$0() {
    var proc;
    return _regeneratorRuntime.async(function callee$1$0$(context$2$0) {
      while (1) switch (context$2$0.prev = context$2$0.next) {
        case 0:
          context$2$0.next = 2;
          return _regeneratorRuntime.awrap(_.iosTools.spawnAsUser('appium', 'ls', ['-l']));

        case 2:
          proc = context$2$0.sent;

          proc.kill();

        case 4:
        case 'end':
          return context$2$0.stop();
      }
    }, null, _this);
  });

  it('spawn as current user', function callee$1$0() {
    var proc;
    return _regeneratorRuntime.async(function callee$1$0$(context$2$0) {
      while (1) switch (context$2$0.prev = context$2$0.next) {
        case 0:
          context$2$0.next = 2;
          return _regeneratorRuntime.awrap(_.iosTools.spawnAsUser('ls', ['-l']));

        case 2:
          proc = context$2$0.sent;

          proc.kill();

        case 4:
        case 'end':
          return context$2$0.stop();
      }
    }, null, _this);
  });

  it('set simulator scale', function callee$1$0() {
    return _regeneratorRuntime.async(function callee$1$0$(context$2$0) {
      while (1) switch (context$2$0.prev = context$2$0.next) {
        case 0:
          context$2$0.next = 2;
          return _regeneratorRuntime.awrap(_.iosTools.setIosSimulatorScale());

        case 2:
        case 'end':
          return context$2$0.stop();
      }
    }, null, _this);
  });

  it('set configure xCode', function callee$1$0() {
    return _regeneratorRuntime.async(function callee$1$0$(context$2$0) {
      while (1) switch (context$2$0.prev = context$2$0.next) {
        case 0:
          context$2$0.next = 2;
          return _regeneratorRuntime.awrap(_.iosTools.configureXcode('6.1.1'));

        case 2:
        case 'end':
          return context$2$0.stop();
      }
    }, null, _this);
  });

  it('reset simulators', function callee$1$0() {
    return _regeneratorRuntime.async(function callee$1$0$(context$2$0) {
      while (1) switch (context$2$0.prev = context$2$0.next) {
        case 0:
          context$2$0.next = 2;
          return _regeneratorRuntime.awrap(_.iosTools.resetSims());

        case 2:
        case 'end':
          return context$2$0.stop();
      }
    }, null, _this);
  });

  it('kill all', function callee$1$0() {
    return _regeneratorRuntime.async(function callee$1$0$(context$2$0) {
      while (1) switch (context$2$0.prev = context$2$0.next) {
        case 0:
          context$2$0.next = 2;
          return _regeneratorRuntime.awrap(_.iosTools.killAll());

        case 2:
          context$2$0.next = 4;
          return _regeneratorRuntime.awrap(_.iosTools.killAll('ls'));

        case 4:
          context$2$0.next = 6;
          return _regeneratorRuntime.awrap(_.iosTools.killAll(['ls', 'echo']));

        case 6:
        case 'end':
          return context$2$0.stop();
      }
    }, null, _this);
  });
});
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInRlc3QvZTJlL2lvcy9pb3MtdG9vbC1lMmUtc3BlY3MuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7OztnQkFFeUIsVUFBVTs7b0JBQ2xCLE1BQU07Ozs7OEJBQ0ksa0JBQWtCOzs7O1FBQ3RDLFdBQVc7O0FBRWxCLGtCQUFLLE1BQU0sRUFBRSxDQUFDO0FBQ2Qsa0JBQUssR0FBRyw2QkFBZ0IsQ0FBQzs7QUFFekIsUUFBUSxDQUFDLGVBQWUsRUFBRSxZQUFNOztBQUU5QixJQUFFLENBQUMsZUFBZSxFQUFDO1FBQ2IsSUFBSTs7Ozs7MkNBQVMsV0FBUyxXQUFXLENBQUMsUUFBUSxFQUFFLElBQUksRUFBRSxDQUFDLElBQUksQ0FBQyxDQUFDOzs7QUFBekQsY0FBSTs7QUFDUixjQUFJLENBQUMsSUFBSSxFQUFFLENBQUM7Ozs7Ozs7R0FDYixDQUFDLENBQUM7O0FBRUgsSUFBRSxDQUFDLHVCQUF1QixFQUFDO1FBQ3JCLElBQUk7Ozs7OzJDQUFTLFdBQVMsV0FBVyxDQUFDLElBQUksRUFBRSxDQUFDLElBQUksQ0FBQyxDQUFDOzs7QUFBL0MsY0FBSTs7QUFDUixjQUFJLENBQUMsSUFBSSxFQUFFLENBQUM7Ozs7Ozs7R0FDYixDQUFDLENBQUM7O0FBRUgsSUFBRSxDQUFDLHFCQUFxQixFQUFDOzs7OzsyQ0FDakIsV0FBUyxvQkFBb0IsRUFBRTs7Ozs7OztHQUN0QyxDQUFDLENBQUM7O0FBRUgsSUFBRSxDQUFDLHFCQUFxQixFQUFDOzs7OzsyQ0FDakIsV0FBUyxjQUFjLENBQUMsT0FBTyxDQUFDOzs7Ozs7O0dBQ3ZDLENBQUMsQ0FBQzs7QUFFSCxJQUFFLENBQUMsa0JBQWtCLEVBQUM7Ozs7OzJDQUNkLFdBQVMsU0FBUyxFQUFFOzs7Ozs7O0dBQzNCLENBQUMsQ0FBQzs7QUFFSCxJQUFFLENBQUMsVUFBVSxFQUFDOzs7OzsyQ0FDTixXQUFTLE9BQU8sRUFBRTs7OzsyQ0FDbEIsV0FBUyxPQUFPLENBQUMsSUFBSSxDQUFDOzs7OzJDQUN0QixXQUFTLE9BQU8sQ0FBQyxDQUFDLElBQUksRUFBRSxNQUFNLENBQUMsQ0FBQzs7Ozs7OztHQUN2QyxDQUFDLENBQUM7Q0FFSixDQUFDLENBQUMiLCJmaWxlIjoidGVzdC9lMmUvaW9zL2lvcy10b29sLWUyZS1zcGVjcy5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8vIHRyYW5zcGlsZTptb2NoYVxuXG5pbXBvcnQgeyBpb3NUb29scyB9IGZyb20gJy4uLy4uLy4uJztcbmltcG9ydCBjaGFpIGZyb20gJ2NoYWknO1xuaW1wb3J0IGNoYWlBc1Byb21pc2VkIGZyb20gJ2NoYWktYXMtcHJvbWlzZWQnO1xuaW1wb3J0ICdtb2NoYXdhaXQnO1xuXG5jaGFpLnNob3VsZCgpO1xuY2hhaS51c2UoY2hhaUFzUHJvbWlzZWQpO1xuXG5kZXNjcmliZSgnaW9zIHRvb2xzIGUyZScsICgpID0+IHtcblxuICBpdCgnc3Bhd24gYXMgdXNlcicsYXN5bmMgKCkgPT4ge1xuICAgIGxldCBwcm9jID0gYXdhaXQgaW9zVG9vbHMuc3Bhd25Bc1VzZXIoJ2FwcGl1bScsICdscycsIFsnLWwnXSk7XG4gICAgcHJvYy5raWxsKCk7XG4gIH0pO1xuXG4gIGl0KCdzcGF3biBhcyBjdXJyZW50IHVzZXInLGFzeW5jICgpID0+IHtcbiAgICBsZXQgcHJvYyA9IGF3YWl0IGlvc1Rvb2xzLnNwYXduQXNVc2VyKCdscycsIFsnLWwnXSk7XG4gICAgcHJvYy5raWxsKCk7XG4gIH0pO1xuXG4gIGl0KCdzZXQgc2ltdWxhdG9yIHNjYWxlJyxhc3luYyAoKSA9PiB7XG4gICAgYXdhaXQgaW9zVG9vbHMuc2V0SW9zU2ltdWxhdG9yU2NhbGUoKTtcbiAgfSk7XG5cbiAgaXQoJ3NldCBjb25maWd1cmUgeENvZGUnLGFzeW5jICgpID0+IHtcbiAgICBhd2FpdCBpb3NUb29scy5jb25maWd1cmVYY29kZSgnNi4xLjEnKTtcbiAgfSk7XG5cbiAgaXQoJ3Jlc2V0IHNpbXVsYXRvcnMnLGFzeW5jICgpID0+IHtcbiAgICBhd2FpdCBpb3NUb29scy5yZXNldFNpbXMoKTtcbiAgfSk7XG5cbiAgaXQoJ2tpbGwgYWxsJyxhc3luYyAoKSA9PiB7XG4gICAgYXdhaXQgaW9zVG9vbHMua2lsbEFsbCgpO1xuICAgIGF3YWl0IGlvc1Rvb2xzLmtpbGxBbGwoJ2xzJyk7XG4gICAgYXdhaXQgaW9zVG9vbHMua2lsbEFsbChbJ2xzJywgJ2VjaG8nXSk7XG4gIH0pO1xuXG59KTtcblxuIl0sInNvdXJjZVJvb3QiOiIuLi8uLi8uLi8uLiJ9
