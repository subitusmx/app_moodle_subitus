'use strict';

var _interopRequireDefault = require('babel-runtime/helpers/interop-require-default')['default'];

Object.defineProperty(exports, '__esModule', {
  value: true
});

var _path = require('path');

var _path2 = _interopRequireDefault(_path);

var _utils = require('./utils');

var _utils2 = _interopRequireDefault(_utils);

var _lodash = require('lodash');

var _lodash2 = _interopRequireDefault(_lodash);

var _bluebird = require('bluebird');

var _bluebird2 = _interopRequireDefault(_bluebird);

var _appiumSupport = require('appium-support');

var log = _appiumSupport.logger.getLogger('ios-tools');

var SIDE_DISK = '/Volumes/SIDE';
var SIDE_SIMS = _path2['default'].resolve(SIDE_DISK, 'sims');

function killAll() {
  var processes = arguments.length <= 0 || arguments[0] === undefined ? ['instruments', 'simulator'] : arguments[0];

  processes = _lodash2['default'].flatten([processes]);
  var seq = (0, _lodash2['default'])(processes).map(function (p) {
    return function () {
      return _utils2['default'].exec('sudo pkill -f ' + p)['catch'](function () {});
    };
  }).value();
  return _bluebird2['default'].reduce(seq, function (_, fn) {
    return fn();
  }, null);
}

function spawnAsUser(user, cmd, args) {
  log.info('running spawnAsUser', user, cmd, args);
  return _utils2['default'].exec("ps -axj | grep loginwindow | awk \"/^" + user + " / {print \\$2;exit}\"").spread(function (stdout) {
    var userPid = stdout.trim();
    return _utils2['default'].spawn("sudo", ['launchctl', 'bsexec', userPid, 'sudo', '-u'].concat([user, cmd]).concat(args), { detached: false });
  });
}

function spawnAsCurrentUser(cmd, args) {
  log.info('running spawnAsCurrentUser', cmd, args);
  return _utils2['default'].exec('whoami').spread(function (stdout) {
    var currentUser = stdout.trim();
    return spawnAsUser(currentUser, cmd, args);
  });
}

function setIosSimulatorScale() {
  log.info('setting simulator scale');
  return _utils2['default'].exec('defaults write com.apple.iphonesimulator SimulatorWindowLastScale 0.5');
}

function configureXcode(xCodeVersion) {
  log.info('configuring xCode', xCodeVersion);
  var bin = _path2['default'].resolve(SIDE_SIMS, 'configure.sh');
  return _utils2['default'].exec(bin + ' ' + xCodeVersion);
}

function resetSims() {
  log.info('resetting simulators');
  var bin = _path2['default'].resolve(SIDE_SIMS, 'reset-sims.sh');
  return _utils2['default'].exec(bin);
}

exports['default'] = {
  spawnAsUser: spawnAsUser,
  spawnAsCurrentUser: spawnAsCurrentUser,
  setIosSimulatorScale: setIosSimulatorScale,
  configureXcode: configureXcode,
  resetSims: resetSims,
  killAll: killAll
};
module.exports = exports['default'];
//# sourceMappingURL=data:application/json;charset=utf8;base64,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SSxDQUFDLEdBQUcsR0FBRyxHQUFHLEdBQUcsWUFBWSxDQUFDLENBQUM7Q0FDN0M7O0FBRUQsU0FBUyxTQUFTLEdBQUk7QUFDcEIsS0FBRyxDQUFDLElBQUksQ0FBQyxzQkFBc0IsQ0FBQyxDQUFDO0FBQ2pDLE1BQUksR0FBRyxHQUFHLGtCQUFLLE9BQU8sQ0FBQyxTQUFTLEVBQUUsZUFBZSxDQUFDLENBQUM7QUFDbkQsU0FBTyxtQkFBTSxJQUFJLENBQUMsR0FBRyxDQUFDLENBQUM7Q0FDeEI7O3FCQUVjO0FBQ2IsYUFBVyxFQUFYLFdBQVc7QUFDWCxvQkFBa0IsRUFBbEIsa0JBQWtCO0FBQ2xCLHNCQUFvQixFQUFFLG9CQUFvQjtBQUMxQyxnQkFBYyxFQUFFLGNBQWM7QUFDOUIsV0FBUyxFQUFFLFNBQVM7QUFDcEIsU0FBTyxFQUFFLE9BQU87Q0FDakIiLCJmaWxlIjoibGliL2lvcy10b29scy5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBwYXRoIGZyb20gJ3BhdGgnO1xuaW1wb3J0IHV0aWxzIGZyb20gJy4vdXRpbHMnO1xuaW1wb3J0IF8gZnJvbSAnbG9kYXNoJztcbmltcG9ydCBCIGZyb20gJ2JsdWViaXJkJztcbmltcG9ydCB7IGxvZ2dlciB9IGZyb20gJ2FwcGl1bS1zdXBwb3J0JztcblxuY29uc3QgbG9nID0gbG9nZ2VyLmdldExvZ2dlcignaW9zLXRvb2xzJyk7XG5cbmNvbnN0IFNJREVfRElTSyA9ICcvVm9sdW1lcy9TSURFJztcbmNvbnN0IFNJREVfU0lNUyA9IHBhdGgucmVzb2x2ZShTSURFX0RJU0ssICdzaW1zJyk7XG5cbmZ1bmN0aW9uIGtpbGxBbGwocHJvY2Vzc2VzPVsnaW5zdHJ1bWVudHMnLCAnc2ltdWxhdG9yJ10pIHtcbiAgcHJvY2Vzc2VzID0gXy5mbGF0dGVuKFtwcm9jZXNzZXNdKTtcbiAgbGV0IHNlcSA9IF8ocHJvY2Vzc2VzKS5tYXAoKHApID0+IHtcbiAgICByZXR1cm4gKCkgPT4ge1xuICAgICAgcmV0dXJuIHV0aWxzLmV4ZWMoJ3N1ZG8gcGtpbGwgLWYgJyArIHApLmNhdGNoKCgpID0+IHt9KTtcbiAgICB9O1xuICB9KS52YWx1ZSgpO1xuICByZXR1cm4gQi5yZWR1Y2Uoc2VxLCBmdW5jdGlvbihfLCBmbikgeyByZXR1cm4gZm4oKTsgfSwgbnVsbCk7XG59XG5cbmZ1bmN0aW9uIHNwYXduQXNVc2VyICh1c2VyLCBjbWQsIGFyZ3MpIHtcbiAgbG9nLmluZm8oJ3J1bm5pbmcgc3Bhd25Bc1VzZXInLCB1c2VyLCBjbWQsIGFyZ3MpO1xuICByZXR1cm4gdXRpbHMuZXhlYyhcbiAgICBcInBzIC1heGogfCBncmVwIGxvZ2lud2luZG93IHwgYXdrIFxcXCIvXlwiICsgdXNlciArIFwiIC8ge3ByaW50IFxcXFwkMjtleGl0fVxcXCJcIlxuICApLnNwcmVhZChmdW5jdGlvbiAoc3Rkb3V0KSB7XG4gICAgdmFyIHVzZXJQaWQgPSBzdGRvdXQudHJpbSgpO1xuICAgIHJldHVybiB1dGlscy5zcGF3bihcbiAgICAgIFwic3Vkb1wiLFxuICAgICAgWyAnbGF1bmNoY3RsJywgJ2JzZXhlYycsIHVzZXJQaWQsJ3N1ZG8nLCAnLXUnXVxuICAgICAgICAuY29uY2F0KFt1c2VyLCBjbWRdKS5jb25jYXQoYXJncyksXG4gICAgICB7IGRldGFjaGVkOiBmYWxzZSB9KTtcbiAgfSk7XG59XG5cbmZ1bmN0aW9uIHNwYXduQXNDdXJyZW50VXNlciAoY21kLCBhcmdzKSB7XG4gIGxvZy5pbmZvKCdydW5uaW5nIHNwYXduQXNDdXJyZW50VXNlcicsIGNtZCwgYXJncyk7XG4gIHJldHVybiB1dGlscy5leGVjKCd3aG9hbWknKS5zcHJlYWQoZnVuY3Rpb24gKHN0ZG91dCkge1xuICAgIHZhciBjdXJyZW50VXNlciA9IHN0ZG91dC50cmltKCk7XG4gICAgcmV0dXJuIHNwYXduQXNVc2VyKGN1cnJlbnRVc2VyLCBjbWQsIGFyZ3MpO1xuICB9KTtcbn1cblxuXG5mdW5jdGlvbiBzZXRJb3NTaW11bGF0b3JTY2FsZSgpIHtcbiAgbG9nLmluZm8oJ3NldHRpbmcgc2ltdWxhdG9yIHNjYWxlJyk7XG4gIHJldHVybiB1dGlscy5leGVjKFxuICAgICdkZWZhdWx0cyB3cml0ZSBjb20uYXBwbGUuaXBob25lc2ltdWxhdG9yIFNpbXVsYXRvcldpbmRvd0xhc3RTY2FsZSAwLjUnXG4gICk7XG59XG5cbmZ1bmN0aW9uIGNvbmZpZ3VyZVhjb2RlICh4Q29kZVZlcnNpb24pIHtcbiAgbG9nLmluZm8oJ2NvbmZpZ3VyaW5nIHhDb2RlJywgeENvZGVWZXJzaW9uKTtcbiAgdmFyIGJpbiA9IHBhdGgucmVzb2x2ZShTSURFX1NJTVMsICdjb25maWd1cmUuc2gnKTtcbiAgcmV0dXJuIHV0aWxzLmV4ZWMoYmluICsgJyAnICsgeENvZGVWZXJzaW9uKTtcbn1cblxuZnVuY3Rpb24gcmVzZXRTaW1zICgpIHtcbiAgbG9nLmluZm8oJ3Jlc2V0dGluZyBzaW11bGF0b3JzJyk7XG4gIHZhciBiaW4gPSBwYXRoLnJlc29sdmUoU0lERV9TSU1TLCAncmVzZXQtc2ltcy5zaCcpO1xuICByZXR1cm4gdXRpbHMuZXhlYyhiaW4pO1xufVxuXG5leHBvcnQgZGVmYXVsdCB7XG4gIHNwYXduQXNVc2VyLFxuICBzcGF3bkFzQ3VycmVudFVzZXIsXG4gIHNldElvc1NpbXVsYXRvclNjYWxlOiBzZXRJb3NTaW11bGF0b3JTY2FsZSxcbiAgY29uZmlndXJlWGNvZGU6IGNvbmZpZ3VyZVhjb2RlLFxuICByZXNldFNpbXM6IHJlc2V0U2ltcyxcbiAga2lsbEFsbDoga2lsbEFsbCxcbn07XG4iXSwic291cmNlUm9vdCI6Ii4uLy4uIn0=
